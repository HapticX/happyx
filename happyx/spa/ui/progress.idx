nimTitle	progress	happyx/spa/ui/progress.html	module src/happyx/spa/ui/progress		0
nim	ProgressAction	happyx/spa/ui/progress.html#ProgressAction	type ProgressAction		43
nim	DefaultProgressAction	happyx/spa/ui/progress.html#DefaultProgressAction	const DefaultProgressAction		45
nim	ProgressBarObj	happyx/spa/ui/progress.html#ProgressBarObj	object ProgressBarObj		719
nim	ProgressBar	happyx/spa/ui/progress.html#ProgressBar	type ProgressBar		719
nim	initProgressBar	happyx/spa/ui/progress.html#initProgressBar,string,ProgressAction,ProgressBarType,bool,string,int,int,tuple[int,int]	proc initProgressBar(uniqCompId: string;\n                action: ProgressAction = DefaultProgressAction;\n                progressType: ProgressBarType = ProgressBarType.ppHorizontal;\n                showPercent: bool = true; title: string = ""; value: int = 0;\n                maxValue: int = 100; size: tuple[a, b: int] = (96, 24)): ProgressBar		48
nim	reRender	happyx/spa/ui/progress.html#reRender.e,ProgressBar	method reRender(self: ProgressBar)		48
nim	renderTag	happyx/spa/ui/progress.html#renderTag,ProgressBar	proc renderTag(self: ProgressBar): TagRef		48
nim	render	happyx/spa/ui/progress.html#render.e,ProgressBar	method render(self: ProgressBar): TagRef		48
heading	ProgressBar Component ✨	happyx/spa/ui/progress.html#progressbar-component-✨	 ProgressBar Component ✨		0
heading	Params ⚙	happyx/spa/ui/progress.html#progressbar-component-✨-params-⚙	   Params ⚙		0
