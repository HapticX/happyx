nimTitle	tag	happyx/spa/tag.html	module src/happyx/spa/tag		0
nim	TagRef	happyx/spa/tag.html#TagRef	type TagRef		57
nim	UnclosedTags	happyx/spa/tag.html#UnclosedTags	const UnclosedTags		70
nim	SvgElements	happyx/spa/tag.html#SvgElements	const SvgElements		75
nim	NimKeywords	happyx/spa/tag.html#NimKeywords	const NimKeywords		87
nim	add	happyx/spa/tag.html#add,TagRef,varargs[TagRef]	proc add(self: TagRef; tags: varargs[TagRef])		170
nim	initTag	happyx/spa/tag.html#initTag,string,StringTableRef,seq[TagRef],bool	proc initTag(name: string; attrs: StringTableRef; children: seq[TagRef] = @[];\n        onlyChildren: bool = false): TagRef		217
nim	initTag	happyx/spa/tag.html#initTag,string,seq[TagRef],bool	proc initTag(name: string; children: seq[TagRef] = @[]; onlyChildren: bool = false): TagRef		247
nim	initTag	happyx/spa/tag.html#initTag,string,bool,StringTableRef,seq[TagRef],bool	proc initTag(name: string; isText: bool; attrs: StringTableRef;\n        children: seq[TagRef] = @[]; onlyChildren: bool = false): TagRef		273
nim	initTag	happyx/spa/tag.html#initTag,string,bool,seq[TagRef],bool	proc initTag(name: string; isText: bool; children: seq[TagRef] = @[];\n        onlyChildren: bool = false): TagRef		307
nim	lazyTag	happyx/spa/tag.html#lazyTag,proc)	proc lazyTag(lazy: proc (): TagRef): TagRef		330
nim	tag	happyx/spa/tag.html#tag,string	proc tag(name: string): TagRef		345
nim	tag	happyx/spa/tag.html#tag,TagRef	proc tag(tag: TagRef): TagRef		360
nim	textTag	happyx/spa/tag.html#textTag,string	proc textTag(text: string): TagRef		376
nim	tagFromString	happyx/spa/tag.html#tagFromString,string	proc tagFromString(source: string): TagRef		439
nim	addArg	happyx/spa/tag.html#addArg,TagRef,string	proc addArg(self: TagRef; arg: string)		447
nim	addArgIter	happyx/spa/tag.html#addArgIter,TagRef,string	proc addArgIter(self: TagRef; arg: string)		464
nim	toSeqIter	happyx/spa/tag.html#toSeqIter,TagRef	proc toSeqIter(self: TagRef): seq[TagRef]		477
nim	lvl	happyx/spa/tag.html#lvl,TagRef	proc lvl(self: TagRef): int		493
nim	`[]`	happyx/spa/tag.html#[],TagRef,string	proc `[]`(self: TagRef; attrName: string): string		521
nim	`[]`	happyx/spa/tag.html#[],TagRef,int	proc `[]`(self: TagRef; index: int): TagRef		528
nim	`[]=`	happyx/spa/tag.html#[]=,TagRef,string,string	proc `[]=`(self: TagRef; attrName: string; attrValue: string)		533
nim	getAttribute	happyx/spa/tag.html#getAttribute,TagRef,string,string	proc getAttribute(self: TagRef; attrName: string; default: string = ""): string		541
nim	findByTag	happyx/spa/tag.html#findByTag,TagRef,string	proc findByTag(self: TagRef; tag: string): seq[TagRef]		557
nim	get	happyx/spa/tag.html#get,TagRef,string	proc get(self: TagRef; tag: string): TagRef		577
nim	`$`	happyx/spa/tag.html#$,TagRef	proc `$`(self: TagRef): string		591
nim	ugly	happyx/spa/tag.html#ugly,TagRef	proc ugly(self: TagRef): string		629
nimgrp	inittag	happyx/spa/tag.html#initTag-procs-all	proc		217
nimgrp	tag	happyx/spa/tag.html#tag-procs-all	proc		345
nimgrp	[]	happyx/spa/tag.html#[]-procs-all	proc		521
heading	Example	happyx/spa/tag.html#tag-âœ¨-example	  Example		0
heading	Tag âœ¨	happyx/spa/tag.html#tag-âœ¨	 Tag âœ¨		0
heading	Usage ðŸ”¨	happyx/spa/tag.html#tag-âœ¨-usage-ðŸ”¨	  Usage ðŸ”¨		0
