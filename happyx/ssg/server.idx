Server	happyx/ssg/server.html#Server	server: Server	
ModelBase	happyx/ssg/server.html#ModelBase	server: ModelBase	
fgColored	happyx/ssg/server.html#fgColored,string,ForegroundColor	server: fgColored(text: string; clr: ForegroundColor): string	
fgStyled	happyx/ssg/server.html#fgStyled,string,Style	server: fgStyled(text: string; style: Style): string	
newServer	happyx/ssg/server.html#newServer,string,int	server: newServer(address: string = &quot;127.0.0.1&quot;; port: int = 5000): Server	
parseQuery	happyx/ssg/server.html#parseQuery,string	server: parseQuery(query: string): owned(StringTableRef)	
start	happyx/ssg/server.html#start.t,Server	server: start(server: Server): untyped	
answer	happyx/ssg/server.html#answer.t,Request,string,HttpCode,HttpHeaders	server: answer(req: Request; message: string; code: HttpCode = Http200; headers: HttpHeaders = newHttpHeaders(\n    [(&quot;Content-Type&quot;, &quot;text/plain; charset=utf-8&quot;)]))	
answerJson	happyx/ssg/server.html#answerJson.t,Request,untyped,HttpCode	server: answerJson(req: Request; data: untyped; code: HttpCode = Http200): untyped	
answerHtml	happyx/ssg/server.html#answerHtml.t,Request,,HttpCode	server: answerHtml(req: Request; data: string | TagRef; code: HttpCode = Http200): untyped	
answerFile	happyx/ssg/server.html#answerFile,Request,string,HttpCode	server: answerFile(req: Request; filename: string; code: HttpCode = Http200;\n           asAttachment = false): owned(Future[void])	
`~`	happyx/ssg/server.html#~.m,StringTableRef,untyped	server: `~`(strTable: StringTableRef; key: untyped): untyped	
routes	happyx/ssg/server.html#routes.m,Server,untyped	server: routes(server: Server; body: untyped): untyped	
model	happyx/ssg/server.html#model.m,untyped,untyped	server: model(modelName, body: untyped): untyped	
initServer	happyx/ssg/server.html#initServer.m,untyped	server: initServer(body: untyped): untyped	
serve	happyx/ssg/server.html#serve.m,string,int,untyped	server: serve(address: string; port: int; body: untyped): untyped	
Available Path Params	happyx/ssg/server.html#available-path-params	    Available Path Params	
Available Route Types	happyx/ssg/server.html#available-route-types	    Available Route Types	
In Route Types Scope:	happyx/ssg/server.html#in-route-types-scopecolon	    In Route Types Scope:	
Available Websocket Routing	happyx/ssg/server.html#available-websocket-routing	    Available Websocket Routing	
In Websocket Scope:	happyx/ssg/server.html#in-websocket-scopecolon	    In Websocket Scope:	
Example	happyx/ssg/server.html#example	 Example	
Server	happyx/ssg/server.html#server	 Server	
Queries	happyx/ssg/server.html#server-queries	  Queries	
WebSockets	happyx/ssg/server.html#server-websockets	  WebSockets	
