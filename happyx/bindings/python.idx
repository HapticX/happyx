servers	happyx/bindings/python.html#servers	python: servers	
serverUniqueId	happyx/bindings/python.html#serverUniqueId	python: serverUniqueId	
newServerPy	happyx/bindings/python.html#newServerPy,string,int	python: newServerPy(address: string = &quot;127.0.0.1&quot;; port: int = 5000): int	
deleteServerPy	happyx/bindings/python.html#deleteServerPy,int	python: deleteServerPy(serverId: int)	
happyxVersion	happyx/bindings/python.html#happyxVersion	python: happyxVersion(): string	
registerCORS	happyx/bindings/python.html#registerCORS,string,string,string,bool	python: registerCORS(allow_origins: string; allow_methods: string;\n             allow_headers: string; credentials: bool)	
close	happyx/bindings/python.html#close	python: close(self: python_types.WebSocket)	
receiveText	happyx/bindings/python.html#receiveText	python: receiveText(self: python_types.WebSocket): string	
receiveJson	happyx/bindings/python.html#receiveJson	python: receiveJson(self: python_types.WebSocket): JsonNode	
sendText	happyx/bindings/python.html#sendText,,string	python: sendText(self: python_types.WebSocket; value: string)	
sendJson	happyx/bindings/python.html#sendJson,,JsonNode	python: sendJson(self: python_types.WebSocket; value: JsonNode)	
id	happyx/bindings/python.html#id	python: id(self: python_types.WebSocket): uint64	
state	happyx/bindings/python.html#state	python: state(self: python_types.WebSocket): string	
`==`	happyx/bindings/python.html#==,,	python: `==`(self, other: python_types.WebSocket): bool	
newResponse	happyx/bindings/python.html#newResponse,string,int,PyObject	python: newResponse(data: string; status_code: int = 200; headers: PyObject = pyDict()): ResponseObj	
newFileResponse	happyx/bindings/python.html#newFileResponse,string,int,bool	python: newFileResponse(filename: string; status_code: int = 200;\n                as_attachment: bool = false): FileResponseObj	
newJsonResponse	happyx/bindings/python.html#newJsonResponse,JsonNode,int,PyObject	python: newJsonResponse(data: JsonNode; status_code: int = 200;\n                headers: PyObject = pyDict()): JsonResponseObj	
newHtmlResponse	happyx/bindings/python.html#newHtmlResponse,string,int,PyObject	python: newHtmlResponse(data: string; status_code: int = 200;\n                headers: PyObject = pyDict()): HtmlResponseObj	
newRequestModelData	happyx/bindings/python.html#newRequestModelData,string,PyObject,seq[tuple[string,string]]	python: newRequestModelData(name: string; pyClass: PyObject;\n                    fields: seq[tuple[key, val: string]]): RequestModelData	
addRequestModelData	happyx/bindings/python.html#addRequestModelData,RequestModelData	python: addRequestModelData(data: RequestModelData)	
path	happyx/bindings/python.html#path,HttpRequest	python: path(self: HttpRequest): string	
body	happyx/bindings/python.html#body,HttpRequest	python: body(self: HttpRequest): string	
httpMethod	happyx/bindings/python.html#httpMethod,HttpRequest	python: httpMethod(self: HttpRequest): string	
headers	happyx/bindings/python.html#headers,HttpRequest	python: headers(self: HttpRequest): PPyObject	
filename	happyx/bindings/python.html#filename,FileResponseObj	python: filename(self: FileResponseObj): string	
asAttachment	happyx/bindings/python.html#asAttachment,FileResponseObj	python: asAttachment(self: FileResponseObj): bool	
data	happyx/bindings/python.html#data,ResponseObj	python: data(self: ResponseObj): string	
data	happyx/bindings/python.html#data,JsonResponseObj	python: data(self: JsonResponseObj): JsonNode	
data	happyx/bindings/python.html#data,HtmlResponseObj	python: data(self: HtmlResponseObj): string	
statusCode	happyx/bindings/python.html#statusCode,ResponseObj	python: statusCode(self: ResponseObj): int	
statusCode	happyx/bindings/python.html#statusCode,FileResponseObj	python: statusCode(self: FileResponseObj): int	
statusCode	happyx/bindings/python.html#statusCode,JsonResponseObj	python: statusCode(self: JsonResponseObj): int	
statusCode	happyx/bindings/python.html#statusCode,HtmlResponseObj	python: statusCode(self: HtmlResponseObj): int	
headers	happyx/bindings/python.html#headers,ResponseObj	python: headers(self: ResponseObj): PyObject	
headers	happyx/bindings/python.html#headers,JsonResponseObj	python: headers(self: JsonResponseObj): PyObject	
headers	happyx/bindings/python.html#headers,HtmlResponseObj	python: headers(self: HtmlResponseObj): PyObject	
registerRouteParamType	happyx/bindings/python.html#registerRouteParamType,string,string	python: registerRouteParamType(name, pattern: string): auto	
path	happyx/bindings/python.html#path,int	python: path(serverId: int): string	
startServerPy	happyx/bindings/python.html#startServerPy,int	python: startServerPy(serverId: int)	
route	happyx/bindings/python.html#route,int,string,seq[string],PyObject	python: route(serverId: int; path: string; methods: seq[string]; callback: PyObject): auto	
get	happyx/bindings/python.html#get,int,string,PyObject	python: get(serverId: int; path: string; callback: PyObject): auto	
post	happyx/bindings/python.html#post,int,string,PyObject	python: post(serverId: int; path: string; callback: PyObject): auto	
put	happyx/bindings/python.html#put,int,string,PyObject	python: put(serverId: int; path: string; callback: PyObject): auto	
delete	happyx/bindings/python.html#delete,int,string,PyObject	python: delete(serverId: int; path: string; callback: PyObject): auto	
link	happyx/bindings/python.html#link,int,string,PyObject	python: link(serverId: int; path: string; callback: PyObject): auto	
unlink	happyx/bindings/python.html#unlink,int,string,PyObject	python: unlink(serverId: int; path: string; callback: PyObject): auto	
purge	happyx/bindings/python.html#purge,int,string,PyObject	python: purge(serverId: int; path: string; callback: PyObject): auto	
options	happyx/bindings/python.html#options,int,string,PyObject	python: options(serverId: int; path: string; callback: PyObject): auto	
head	happyx/bindings/python.html#head,int,string,PyObject	python: head(serverId: int; path: string; callback: PyObject): auto	
copy	happyx/bindings/python.html#copy,int,string,PyObject	python: copy(serverId: int; path: string; callback: PyObject): auto	
websocket	happyx/bindings/python.html#websocket,int,string,PyObject	python: websocket(serverId: int; path: string; callback: PyObject): auto	
middleware	happyx/bindings/python.html#middleware,int,PyObject	python: middleware(serverId: int; callback: PyObject): auto	
notfound	happyx/bindings/python.html#notfound,int,PyObject	python: notfound(serverId: int; callback: PyObject): auto	
mount	happyx/bindings/python.html#mount,int,string,int	python: mount(serverId: int; path: string; otherId: int)	
`static`	happyx/bindings/python.html#static,int,string,string,seq[string]	python: `static`(serverId: int; path: string; directory: string; extensions: seq[string])	
Python Bindings üêç	happyx/bindings/python.html#python-bindings-üêç	 Python Bindings üêç	
