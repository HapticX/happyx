nimTitle	macro_utils	happyx/private/macro_utils.html	module src/happyx/private/macro_utils		0
nim	uniqueId	happyx/private/macro_utils.html#uniqueId	const uniqueId		15
nim	slots	happyx/private/macro_utils.html#slots	const slots		16
nim	UniqueComponentId	happyx/private/macro_utils.html#UniqueComponentId	const UniqueComponentId		18
nim	discardStmt	happyx/private/macro_utils.html#discardStmt	proc discardStmt(): NimNode		21
nim	buildHtmlProcedure	happyx/private/macro_utils.html#buildHtmlProcedure,NimNode,NimNode,bool,NimNode,bool,string,NimNode,seq[NimNode],NimNode	proc buildHtmlProcedure(root, body: NimNode; inComponent: bool = false;\n                   componentName: NimNode = newEmptyNode();\n                   inCycle: bool = false; cycleTmpVar: string = "";\n                   compTmpVar: NimNode = newEmptyNode();\n                   cycleVars: var seq[NimNode]; parent: NimNode = newEmptyNode()): NimNode		35
nim	bracket	happyx/private/macro_utils.html#bracket,varargs[NimNode]	proc bracket(node: varargs[NimNode]): NimNode		41
nim	isIdentUsed	happyx/private/macro_utils.html#isIdentUsed,NimNode,NimNode	proc isIdentUsed(body, name: NimNode): bool		47
nim	findAllUses	happyx/private/macro_utils.html#findAllUses,NimNode,NimNode,seq[NimNode]	proc findAllUses(body, name: NimNode; uses: var seq[NimNode])		63
nim	getIdentUses	happyx/private/macro_utils.html#getIdentUses,NimNode,NimNode	proc getIdentUses(body, name: NimNode): seq[NimNode]		76
nim	newCast	happyx/private/macro_utils.html#newCast,NimNode,NimNode	proc newCast(fromType, toType: NimNode): NimNode		83
nim	newLambda	happyx/private/macro_utils.html#newLambda,NimNode	proc newLambda(body: NimNode; params: seq[NimNode] | NimNode = @[newEmptyNode()];\n          pragmas: seq[NimNode] | seq[string] = @[newEmptyNode()]): NimNode		87
nim	bracket	happyx/private/macro_utils.html#bracket	proc bracket(node: seq[NimNode] | seq[string]): NimNode		124
nim	pragmaBlock	happyx/private/macro_utils.html#pragmaBlock,openArray[NimNode],NimNode	proc pragmaBlock(pragmas: openArray[NimNode]; statementList: NimNode): NimNode		135
nim	getTagName	happyx/private/macro_utils.html#getTagName,string	proc getTagName(name: string): string		144
nim	formatNode	happyx/private/macro_utils.html#formatNode,NimNode	proc formatNode(node: NimNode): NimNode		158
nim	liveviewParam	happyx/private/macro_utils.html#liveviewParam,string	proc liveviewParam(name: string): NimNode		165
nim	useComponent	happyx/private/macro_utils.html#useComponent,NimNode,bool,bool,string,NimNode,seq[NimNode],bool,bool,bool	proc useComponent(statement: NimNode; inCycle, inComponent: bool;\n             cycleTmpVar: string; compTmpVar: NimNode;\n             cycleVars: var seq[NimNode]; returnTagRef: bool = true;\n             constructor: bool = false; nameIsIdent: bool = false): NimNode		177
nim	newMultiVarStmt	happyx/private/macro_utils.html#newMultiVarStmt,openArray[NimNode],NimNode,bool	proc newMultiVarStmt(extractNames: openArray[NimNode]; val: NimNode;\n                isLet: bool = false): NimNode		393
nim	isExpr	happyx/private/macro_utils.html#isExpr,NimNode	proc isExpr(node: NimNode): bool		403
nim	replaceUseInComponent	happyx/private/macro_utils.html#replaceUseInComponent,NimNode	proc replaceUseInComponent(body: NimNode)		442
nim	replaceIter	happyx/private/macro_utils.html#replaceIter,NimNode,proc(NimNode),proc(NimNode)	proc replaceIter(root: NimNode; search: proc (x: NimNode): bool;\n            replace: proc (x: NimNode): NimNode): bool		451
nim	attribute	happyx/private/macro_utils.html#attribute,NimNode,bool	proc attribute(attr: NimNode; inComponent: bool = false): NimNode		464
nim	addAttribute	happyx/private/macro_utils.html#addAttribute,NimNode,NimNode,NimNode,bool	proc addAttribute(node, key, value: NimNode; inComponent: bool = false)		525
nim	endsWithBuildHtml	happyx/private/macro_utils.html#endsWithBuildHtml,NimNode	proc endsWithBuildHtml(statement: NimNode): bool		601
nim	replaceSelfComponent	happyx/private/macro_utils.html#replaceSelfComponent,NimNode,NimNode,NimNode,bool,bool,bool	proc replaceSelfComponent(statement, componentName: NimNode; parent: NimNode = nil;\n                     convert: bool = false; is_constructor: bool = false;\n                     is_field: bool = true): NimNode		605
nimgrp	bracket	happyx/private/macro_utils.html#bracket-procs-all	proc		41
heading	Macro Utils	happyx/private/macro_utils.html#macro-utils	 Macro Utils		0
heading	⚠ Warning: This Module Is LOW-LEVEL API ⚠	happyx/private/macro_utils.html#macro-utils-⚠-warningcolon-this-module-is-lowminuslevel-api-⚠	  ⚠ Warning: This Module Is LOW-LEVEL API ⚠		0
